services:
  postgres:
    image: postgres:16
    ports:
      - "5433:5432"
    restart: always
    env_file: .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5

  redis:
    image: redis:7
    restart: always

  api:
    command: >
      sh -c "alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000"

    build: .
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./:/app

  celery-worker:
    build: .
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - redis
      - postgres
      - libretranslate
    entrypoint: []
    command: ["celery", "-A", "app.worker.celery_app", "worker", "--loglevel=info"]

  celery-beat:
    build: .
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - redis
      - postgres
      - libretranslate
    entrypoint: []
    command: ["celery", "-A", "app.worker.celery_app", "beat", "--loglevel=info"]

  bot:
    build: .
    env_file: .env
    volumes:
      - ./:/app
    command: [ "python", "-u", "-m", "bot.main" ]
    entrypoint: [ ]
    depends_on:
      - redis
      - postgres

  fulltextrss:
    image: heussd/fivefilters-full-text-rss:latest
    restart: always
    environment:
      - FTR_TIMEOUT=20
      - FTR_CONNECT_TIMEOUT=10
    depends_on:
      - postgres

  libretranslate:
    image: libretranslate/libretranslate:latest
    restart: always
    environment:
      - LT_DEBUG=false
      - LT_LOAD_ONLY=en,ru,es,fr,de,zh,ja,ko,it,pt,ar,hi,tr,nl,sv

volumes:
  postgres_data:
