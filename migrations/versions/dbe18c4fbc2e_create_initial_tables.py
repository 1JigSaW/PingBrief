"""create initial tables

Revision ID: dbe18c4fbc2e
Revises: 
Create Date: 2025-07-29 23:55:51.456935

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dbe18c4fbc2e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Human-friendly name'),
    sa.Column('url', sa.String(length=512), nullable=False, comment='RSS feed URL or API endpoint'),
    sa.Column('default_language', sa.String(length=8), nullable=False, comment='Default language code (ISO 639-1)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Enable/disable source'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_sources_id'), 'sources', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('telegram_id', sa.String(), nullable=True, comment='Telegram user ID, if registered via bot'),
    sa.Column('username', sa.String(length=64), nullable=True, comment='Telegram or web username'),
    sa.Column('first_name', sa.String(length=64), nullable=True, comment="User's first name"),
    sa.Column('last_name', sa.String(length=64), nullable=True, comment="User's last name"),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Active flag'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('language', sa.String(length=8), nullable=False, comment='Language code for summaries (ISO 639-1)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Enable/disable this subscription'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_table('digests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False, comment='Original article title'),
    sa.Column('summary', sa.Text(), nullable=False, comment='LLM-generated summary'),
    sa.Column('url', sa.String(length=512), nullable=False, comment='Link to the full article'),
    sa.Column('scheduled_for', sa.DateTime(), nullable=False, comment='When this digest should be sent'),
    sa.Column('sent_at', sa.DateTime(), nullable=True, comment='Actual send timestamp (populated upon send)'),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'FAILED', name='digeststatus'), nullable=False, comment='Delivery status'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_digests_id'), 'digests', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_digests_id'), table_name='digests')
    op.drop_table('digests')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_sources_id'), table_name='sources')
    op.drop_table('sources')
    # ### end Alembic commands ###
